import 'dart:convert';

/// Use this in tests to get a valid upload description for the bucket.
abstract final class BucketUploadDescription {
  /// The project ID to use in the upload description, use this in your tests
  static const projectId = 'my-project-id';

  /// The project UUID to use in the upload description, normally generated by
  /// the server.
  static const projectUuid = '586a138e-66f3-4dcb-b2e6-bb2d38ab4a4a';

  /// The bucket name to use in the upload description, this name is significant
  /// and must match the subfolder name in the test_storage_bucket. E.g. bucket.
  static const bucketName = 'bucket';

  static final uploadedFilePath = Uri(
    pathSegments: [projectId, '$projectUuid.zip'],
  ).toString();

  static final Map<String, dynamic> _descriptionContent = {
    'url':
        "http://$bucketName.localhost:8000/$projectId%2F$projectUuid.zip?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=test-service-bucket%40hosting-example-414217.iam.gserviceaccount.com%2F20240909%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20240909T094501Z&X-Goog-Expires=600&X-Goog-SignedHeaders=accept%3Bcontent-type%3Bhost%3Bx-goog-meta-tenant-project-id&x-goog-signature=2a3432d7e650cd7f32e4b6ddb01051390ae40084fb45f7af25cfaa891f33425d7bf64939b78b9e339b28bcf5238dfb58c67fd8e1eb8957c2df22b1b91d1f01a3ecd1ad4217a570a7e7a80e2999164ca7d920058bfdf52851341fe3c85340da14917026c8efae8f733d5d6548a149ae0558f88307bfcf23f97c2a141317d2be5cf4035488bd7b01137333250be11a174e73096674d8eaffcc7c7d2849044a3eb7669c35f7e421f99ab9557610478c96b68b29962fa1ea002cf76a09a0f302c66157844bd1a2b4b8a36378fd18f8a8dab750d955ff1866c9b20105c56b1f3ebf88c4dcf75043518c74d3d25c54673557b397ba1e31336766004c06ddf7bbbe1940\\",
    'type': 'binary',
    'httpMethod': 'PUT',
    'headers': {
      'content-type': 'application/octet-stream',
      'accept': '*/*',
      'x-goog-meta-tenant-project-id': projectId,
      'x-goog-meta-upload-id': 'upload-$projectUuid',
      'host': '$bucketName.localhost:8000',
    },
  };

  /// The upload description for the bucket compatible with the bucket
  /// mock server, launched by docker compose up in ground control.
  static String get uploadDescription => jsonEncode(_descriptionContent);
}
